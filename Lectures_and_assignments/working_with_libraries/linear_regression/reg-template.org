

#+BEGIN_SRC ipython  :display text/plain
import pandas as pd  # import pandas as pd
import os  # no need to set an alias, since os is already short
import statsmodels.formula.api as smf 

# define the file and sheetname we want to read. Note that the file
# has to be present in the local working directory!
fn: str = "alpha_vs_depth.csv"  # file name

# this little piece of code could have saved me 20 minutes
if not os.path.exists(fn):  # check if the file is actually there
    raise FileNotFoundError(f"Cannot find file {fn}")

df :pd.DataFrame = pd.read_csv(fn)  # read data
# df.columns = ["alpha", "mbsl"] # replace colum names
df.head() # test that all went well


model :smf.ols = smf.ols(formula="alpha ~ mbsl",data=df)
results :model.fit = model.fit()      # fit the model to the data
print(results.summary())   # print the results of the analysis
#+BEGIN_SRC ipython  
# retrieve values from the model results
slope   :float = results.params[1]  # the slope
y0      :float = results.params[0]  # the y-intercept
rsquare :float = results.rsquared   # rsquare
pvalue  :float = results.pvalues[1] # the pvalue

#+END_SRC

#+RESULTS:
:results:
# Out [4]: 
# output
                            OLS Regression Results                            
==============================================================================
Dep. Variable:                  alpha   R-squared:                       0.300
Model:                            OLS   Adj. R-squared:                  0.278
Method:                 Least Squares   F-statistic:                     13.31
Date:                Sun, 02 Aug 2020   Prob (F-statistic):           0.000959
Time:                        11:18:56   Log-Likelihood:                -131.55
No. Observations:                  33   AIC:                             267.1
Df Residuals:                      31   BIC:                             270.1
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
Intercept     25.1609      4.570      5.506      0.000      15.841      34.481
mbsl           0.0058      0.002      3.649      0.001       0.003       0.009
==============================================================================
Omnibus:                        2.052   Durbin-Watson:                   0.402
Prob(Omnibus):                  0.358   Jarque-Bera (JB):                1.731
Skew:                           0.427   Prob(JB):                        0.421
Kurtosis:                       2.272   Cond. No.                     5.58e+03
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
[2] The condition number is large, 5.58e+03. This might indicate that there are
strong multicollinearity or other numerical problems.

:end:


#+BEGIN_SRC ipython  :display text/plain
import seaborn as sns
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
sns.regplot(x='mbsl', y='alpha', data=df, ax=ax)
plt.show()
fig.savefig("test.pdf")
#+END_SRC

#+RESULTS:
:results:
# Out [7]: 
# text/plain
: <Figure size 432x288 with 1 Axes>
:end:


#+BEGIN_SRC ipython  :display text/plain

#+END_SRC

