#+STARTUP: showall
#+OPTIONS: todo:nil tasks:nil tags:nil toc:nil
#+PROPERTY: header-args :eval never-export
#+EXCLUDE_TAGS: noexport
#+LATEX_HEADER: \usepackage{breakurl}
#+LATEX_HEADER: \usepackage{newuli}
#+LATEX_HEADER: \usepackage{uli-german-paragraphs}


* If Statements Assignment 
Please copy this notebook to your submissions folder before editing
it. Otherwise, your edits may be overwritten the next time you log into
syzygy. Please name your copy "If-statements-FirstName-LastName".

To submit your assignment, you need to download it and submit
it to Quercus. You can delete this and the preceding paragraph
afterward.

Note, most of the text below renders as a single text cell. Thus it is
not easy to answer the questions with more text of your own. However,
you can split the existing text. Click the text cell you want to
split, position the cursor to where you want to the split occur, and
press the following keys at the same time "shift enter minus".  Leave
the edit mode with shift enter, and you can now insert a new text cell
with your answer below. Please use this method from now on.

*Date:*

*First Name:*

*Last Name:*

*Student: Id*


   1. Write a short code snippet which uses the variable a (=a = 3)=.
      If a equals 3, your code should print =a equals three=. If a is
      larger than 3 your code should print =a is larger than three=,
      and if a is smaller than 3, your code should print
      =a is smaller than 3=.
      Use three independent if statements to achieve this
      result. Test and verify your code with different values for
      =a=. Correct if statements 1pt, correct comparison statements
      1pt, correct print statements 1pt, 3 tests 1pt

   2. Same as above, but this time use a single if statement with
      =elif= and =else=.  Test and verify your code with different
      values for =a=. Correct elif & else statements: 2pts, correct
      comparison: 1pt
 
   3. Now modify your code in such a way that the comparison is no
      longer hard-coded, i.e., use a second variable =b= so that your
      comparison is done like =a === b. Your print statement should
      reflect the dynamic nature of =b= i.e., it should now print the
      value of a and b and their respective relation:
       =3 equals 3=.
       Test and verify your code with different values for =a= and
      =b=. Correct if statements & comparison: 2pts, correct print
      statements: 1pt
      
   4. If you were to execute this code block, what would be the result
      (2pts):
      #+BEGIN_EXAMPLE
      a = 5

      if (a == 5) :
         print(f"a equals five")
      if a > 3 :
         print(f"a is larger than three")
      if a < 5 :
         print(f"a is smaller than five")
      if a < 10:
	print(f"a is smaller than 10")
      #+END_EXAMPLE
     
     
 5. [@5] How would you need to restructure the above code so
    that it only prints the result of the first true comparison (but
    not the fact that a is smaller than 10)? Write your code below and
    test it with values of =a=3= and =a=9=.  Note, you must keep all
    comparisons in the code! (2 pts)
 6. Write if-statement(s) which depending on the value of =a= results
    in one of the two statements. Test your code with various values
    of a (and make sure to include the numbers 3 and 7 in your
    test). Correct statements 2pts, tests 1pt.
    #+BEGIN_EXAMPLE
    a is inside the range from 3 to 7
    a is outside the range from 3 to 7
    #+END_EXAMPLE
    Note: when I say range from 3 to 7, then 3 and 7 are part of this range.
 7. Do the same as in the above, but this time use a combination of boolean
    and comparison operators to create a single if statement which will
    create the above output (i.e., you only have one if-block, and one
    else-block). (2 pts)
 8. Without using boolean operators, write some code which tests
    whether the value of =a= is in the range between 100 and above 80
    (i.e., =<= 100=, but =>80=), in the range between 80 but above 60,
    in the range between 60 and 40.  Your code should print a
    warning message if =a= is larger than 100 and smaller
    than 40. Otherwise, your code should print which bucket =a=
    belongs to (where a bucket is one of the intervals, i.e., 80 to
    60, etc.). Test your code for various values of =a=. Make sure you
    test the boundary cases 80, 60, 40, the extreme cases like 110 and
    20, and intermediate values like 85, 64 and 55. (8pts)
 9. As in the above, but this time use boolean operators (8pts)
    
