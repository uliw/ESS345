#+STARTUP: showall
#+OPTIONS: todo:nil tasks:nil tags:nil toc:nil
#+OPTIONS: d:(not "results")
#+PROPERTY: header-args :eval never-export
#+EXCLUDE_TAGS: noexport
#+LATEX_HEADER: \usepackage{breakurl}
#+LATEX_HEADER: \usepackage{newuli}
#+LATEX_HEADER: \usepackage{uli-german-paragraphs}
** Build :noexport:

Run this to export the notebook without the results attached!

#+BEGIN_SRC emacs-lisp
(let ((ox-ipynb-preprocess-hook '((lambda () (org-babel-map-src-blocks nil (org-babel-remove-result))))))
 (ox-ipynb-export-to-ipynb-file-and-open))
#+END_SRC

#+RESULTS:
: #<window 126 on Python_for_a_non_technical_audience.org>


* Assignment

Note: It may be easiest, if you copy this entire notebook to your
submission folder and add title and id etc, rather than the other way
round.


** Learning Outcomes
 
 - get comfortable selecting subsets from list-type variables using
   slicing syntax
 

** Questions

Execute the following block so that =my_list= becomes known in your
local Jupyter session.
#+BEGIN_SRC ipython
my_list = [3, 4, 5, 12, 0, 11, 1, 2, 9, 8, 7, 13, 10]
#+END_SRC


Add a textbox here, and explain why the above statement does not
produce any output. 2pts


Write a python statement which shows the last 4 elements of =my_list=
1pt

#+BEGIN_SRC ipython
# Add your code here
#+END_SRC

Write python statement which shows every 3rd element of =my_list=
starting with the third element in the list. 2pts
#+BEGIN_SRC ipython
# Add your code here
#+END_SRC


Write python statement which shows every second element of the last 6
elements in =my_list= 2pts. Note, consider to split this into two steps, where you first select the last 6 elements and a save them into a new list, and than you write a statement which selects every second element. You can also chain list-slicing commands, e.g., =my_list[1:4][::2]=. In this case you first specify a list from index 1 to 4, and then select every second element. Note, the expected answer starts with the number 9
#+BEGIN_SRC ipython
# Add your code here
#+END_SRC

Write python statement which shows every second element of the last 6
elements in =my_list= in reverse order 3 pts (i.e., you count
backwards from the last 6 list elements, and then start with the
second last element of this sub list). This time, chain your slicing
statements as in the example above.
#+BEGIN_SRC ipython
# Add your code here
#+END_SRC

What is the shortest slicing notation to show all values of =my_list= in reverse order. 2pts
#+BEGIN_SRC ipython
# Add your code here
#+END_SRC

Add a textbox below the codebox, and explain why the next two
statements do not produce the same result 2pts
#+BEGIN_SRC ipython
print(my_list[0:])
print(my_list[0:-1])
#+END_SRC

what is wrong with this python statement below? 1pt
#+BEGIN_EXAMPLE
my_list = [1 2 3]
#+END_EXAMPLE

Add a python statement below which show the first 3 words of =ml= (1pt)
#+BEGIN_SRC ipython
ml = ["This", "is", "a", "short", "sentence"]
#+END_SRC



*** Advanced question

Add a python statement which will uses chained slicing syntax to extract the
first and last element of the first list in the list of lists. It is
ok to assume that the sub-list length is 3. (3 pt)
#+BEGIN_SRC ipython
ml = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
#+END_SRC


** Marking Scheme

Total points: 22

 - 2 pts for correct notebook formatting
 - 2 pts for correct notebook name
 - 18 pts for the questions

** Submission Instructions

#+INCLUDE: submission_instructions.org
