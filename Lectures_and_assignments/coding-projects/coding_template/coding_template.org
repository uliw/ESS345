#+STARTUP: showall
#+OPTIONS: todo:nil tasks:nil tags:nil toc:nil
#+PROPERTY: header-args :eval never-export
#+EXCLUDE_TAGS: noexport
#+LATEX_HEADER: \usepackage{breakurl}
#+LATEX_HEADER: \usepackage{newuli}
#+LATEX_HEADER: \usepackage{uli-german-paragraphs}



* A Coding Template
  :PROPERTIES:
  :metadata: (slideshow . ((slide_type . slide)))
  :END:

Most coding follows a set pattern. As such, this coding template
provides a useful framework. Using this template for short scripts is
overkill, but once you start a larger project, it will be a life
saver.As such we will use it for most of our coding assignments as
well. Note that not all of the sections in this template apply to all
projects, and that some of the section in the actual template refer to
techniques which will be introduces at a later stage. So feel free to
ignore them.

** The Notebook Header

*Date:*

*First Name:*

*Last Name:*

*Student: Id*


** Code planning
#+attr_ipynb: (name . unique-cell) (tags . (tag1 tag2)) (slideshow . ((slide_type . slide)))

*** What is the code supposed to do

*** What will your code not do

*** What kind of data structure will you need

  - What kind of data are used as input?

  - What kind of data will be output?

  - How will you structure your data?


*** What is your test case

*** Pseudo Code

Use a nested list to go through the needed operations
    


** The Actual Code
#  #+attr_ipynb: (name . unique-cell) (tags . (tag1 tag2)) (slideshow . ((slide_type . slide)))

Use this section to write the actual python code

#+BEGIN_SRC ipython
# coding: utf-8
"""
Program Name: bin_2_dec

Description: 

Arguments:

Version: 0.1

Author: 

Copyright:

License: GPL
"""

# *--- Add your libabry import statements below this line ------*

# *--- Add your type hinting definitions below this line  ------*

# *--- Add your function definitions below this line      ------*

# *--- start with defintions for main code      ----------------*


# Parameters (i.e., variables you change for each run)

# Scalar variables (i.e., single value only)

# Complex data types (strings, lists, vectors)

# *---------------------- start code ----------------------------*
#+END_SRC


